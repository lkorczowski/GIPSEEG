function imagescMatrixSelection(Data, sizeSubs, xlab, ylab,colMode)% This script enables to browse a set of channels, using a simple slider.% inputs: % - Data:   set of matrices % - sizeSubs: (optionnal) size of submatrices for plotting separators% - xlab:   (optionnal) specified xlabel for plotting data% - ylab:   (optionnal) specified ylabel for plotting data% - colMode:(optionnal) colormap centred around zero according to maxima%%  *** History *** % Last version: 2011% Created by J.Chatel-Goldman @GIPSA Lab, jonas.chatel.goldman(at)gmail.comK           = size(Data,3);MatSel     	= K;h           = gcf;set(h,'Toolbar','figure')if nargin < 5  colMode = 1; endif nargin < 4  ylab  = [];  endif nargin < 3  xlab  = [];  endif nargin < 2  sizeSubs = 0;  endif K == 1%     warning('function ImagescMatrixSelection: data to browse has just one matrix!');    imagesc(Data(:,:,MatSel))    xlabel(xlab), ylabel(ylab), colorbar    if(colMode==1)         arrangeCol(Data);     end    drawSep(sizeSubs);    return endfigLoc = get(h, 'Position');sliderSel = uicontrol(  'style','slider','String','IC#','Min',1,'Max',K , ...                        'SliderStep',[1/K 5/K],'Value',MatSel, ...                        'units','normalized','Position',[.94 .25 .05 .5], ...                        'BackgroundColor','w','Callback',@redraw_cb);redraw_cb(h, MatSel);function redraw_cb(h, MatSel)    ChanSel = K-floor(get(sliderSel, 'value'))+1 ;    imagesc(Data(:,:,ChanSel))    xlabel(xlab), ylabel(ylab), colorbar    if(colMode==1)         arrangeCol(Data(:,:,ChanSel));     end    drawSep(sizeSubs);    title(['index: ' int2str(ChanSel) ' / ' int2str(K)]) endfunction drawSep(S)% this function draw lines separators for submatrices whose size is % specified in vector S.     if(S==0) return ; end    if(size(S,1) == 1) S=S'; end    N = length(S);    x = .5+reshape([zeros(N,1) sum(S)*ones(N,1)]',1,2*N);    y = .5+reshape([cumsum(S) cumsum(S)]',1,2*N);    for i=0:N-2        line(x(2*i+1:2*i+2),y(2*i+1:2*i+2),'color','k', 'LineWidth', 2)        line(y(2*i+1:2*i+2),x(2*i+1:2*i+2),'color','k', 'LineWidth', 2)    endendfunction arrangeCol(A)% this function prepare a colormap centred around zero according to maxima% of A    m = max([abs(max(max(A))) abs(min(min(A)))]);    caxis([-m m]);    colormap(redblue(128));    colorbarendend